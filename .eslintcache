[{"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/index.js":"1","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/App.js":"2","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js":"3","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NewQuote.js":"4","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js":"5","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js":"6","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js":"7","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/Layout.jsx":"8","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/MainNavigation.jsx":"9","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js":"10","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteItem.js":"11","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js":"12","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/Card.js":"13","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/LoadingSpinner.js":"14","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js":"15","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NotFound.js":"16","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/hooks/use-http.js":"17","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/lib/api.js":"18","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/NoQuotesFound.js":"19","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentsList.js":"20","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentItem.js":"21","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/store/auth-context.js":"22","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/HomePage.js":"23","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AuthPage.js":"24","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/Auth/AuthForm.js":"25","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/ProfilePage.js":"26","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/Profile/UserProfile.js":"27","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/Profile/ProfileForm.js":"28"},{"size":420,"mtime":1668678639601,"results":"29","hashOfConfig":"30"},{"size":2510,"mtime":1668770423157,"results":"31","hashOfConfig":"30"},{"size":1453,"mtime":1668177251207,"results":"32","hashOfConfig":"30"},{"size":756,"mtime":1666959849762,"results":"33","hashOfConfig":"30"},{"size":1881,"mtime":1668169599024,"results":"34","hashOfConfig":"30"},{"size":1659,"mtime":1668174103704,"results":"35","hashOfConfig":"30"},{"size":1393,"mtime":1668173662847,"results":"36","hashOfConfig":"30"},{"size":338,"mtime":1666946841704,"results":"37","hashOfConfig":"30"},{"size":2279,"mtime":1668769856776,"results":"38","hashOfConfig":"30"},{"size":2324,"mtime":1668718148144,"results":"39","hashOfConfig":"30"},{"size":709,"mtime":1668766749815,"results":"40","hashOfConfig":"30"},{"size":1733,"mtime":1666951927441,"results":"41","hashOfConfig":"30"},{"size":156,"mtime":1616596573000,"results":"42","hashOfConfig":"30"},{"size":167,"mtime":1616596573000,"results":"43","hashOfConfig":"30"},{"size":270,"mtime":1616596573000,"results":"44","hashOfConfig":"30"},{"size":252,"mtime":1668711721324,"results":"45","hashOfConfig":"30"},{"size":1212,"mtime":1616590605000,"results":"46","hashOfConfig":"30"},{"size":2228,"mtime":1666958999607,"results":"47","hashOfConfig":"30"},{"size":268,"mtime":1616596573000,"results":"48","hashOfConfig":"30"},{"size":334,"mtime":1616596573000,"results":"49","hashOfConfig":"30"},{"size":200,"mtime":1616596573000,"results":"50","hashOfConfig":"30"},{"size":2635,"mtime":1668769327447,"results":"51","hashOfConfig":"30"},{"size":171,"mtime":1668677461639,"results":"52","hashOfConfig":"30"},{"size":130,"mtime":1668677454507,"results":"53","hashOfConfig":"30"},{"size":6296,"mtime":1668769639875,"results":"54","hashOfConfig":"30"},{"size":149,"mtime":1668677466194,"results":"55","hashOfConfig":"30"},{"size":369,"mtime":1668769822245,"results":"56","hashOfConfig":"30"},{"size":1321,"mtime":1668684195164,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"hdanc9",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/index.js",[],["121","122"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/App.js",["123","124","125","126","127","128","129"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js",["130","131","132","133"],"import React, {useEffect, useState} from 'react'\nimport QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport { getAllQuotes } from '../components/lib/api'\n\nconst DUMMMY_QUOTES = [\n  {id:'q1' , author:'schad Botombe', text:'Learning react is fun!!' },\n  {id:'q2' , author:'fred legusta', text:'Learning react is fun!!' },\n  {id:'q3' , author:'tom hendricks', text:'Learning react is fun!!' },\n]\n\n\nconst AllQuotes = () => {\n\nconst [fetchdata , setFetchData] =  React.useState(DUMMMY_QUOTES)\nconst [filterTerm , setFilterTerm ] = useState('')\n\n  let {sendRequest, status, data:loadedQuotes , error} = useHttp(getAllQuotes)\n\n// console.log(loadedQuotes, 'getting the quotes ')\n\nif(loadedQuotes == null){\n  loadedQuotes = DUMMMY_QUOTES\n}\n\n\nuseEffect(()=>{\n  sendRequest()\n  if(loadedQuotes == null){\n\n    setFetchData(loadedQuotes)\n  }\n},[sendRequest])\n\n\n\n\nif(status === 'pending'){\n  return (\n    <div className='centered focused'>\n      <LoadingSpinner/>\n    </div>\n  )\n}\nif(error){\n   return (\n    <p>unable to fetch because{error}</p>\n   )\n}\nif(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n  return <NoQuotesFound/>\n}\n\n  return (\n       \n       <QuoteList quotes={loadedQuotes}/>\n      //  <QuoteList quotes={DUMMMY_QUOTES}/>\n  \n  )\n}\n\nexport default AllQuotes","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NewQuote.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js",["134"],"import React from 'react'\nimport { Fragment, useEffect } from 'react'\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport useHttp from '../hooks/use-http'\nimport { getSingleQuote } from '../components/lib/api'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\n\nconst QuoteDetails = () => {\n\n  const params = useParams()\n  const match = useRouteMatch()\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(getSingleQuote, true)\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  if (status === 'pending') {\n    return <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (!loadedQuotes) {\n    return <p>No quote found!</p>\n  }\n\n\n\n  console.log(params)\n\n  const DUMMMY_QUOTES = [\n    { id: 'q1', author: 'schad Botombe', text: 'Learning react is fun!!' },\n    { id: 'q2', author: 'fred legusta', text: 'Learning react is fun!!' },\n    { id: 'q3', author: 'tom hendricks', text: 'Learning react is fun!!' },\n  ]\n\n  const quote = DUMMMY_QUOTES.find(quote => quote.id === params.quoteId)\n\n\nif(error){\n  return <p className='centered'>\n    error getting the comments because : {error}\n  </p>\n}\n\n\n  if (!loadedQuotes) {\n    return <h3> No Quotes found here!!</h3>\n  }\n\n\n\n  return (\n    <Fragment>\n\n      <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.author} />\n\n      <Route path={match.path} exact>\n        <div className={'centered'}>\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  )\n}\n\nexport default QuoteDetails","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js",["135","136"],"import { useEffect, useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { useParams } from 'react-router-dom';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const params = useParams()\n\n  const { sendRequest, status, error } = useHttp(addComment)\n\n\nconst {onAddedComment} = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n\n      onAddedComment();\n    }\n  }, [status, error])\n\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ text: enteredText }, props.quoteId)\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'> <LoadingSpinner /></div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/Layout.jsx",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/MainNavigation.jsx",["137","138","139","140","141"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js",["142"],"import { Fragment, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n\n\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1\n    }\n  })\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const [filterTerm, setFilterTerm] = useState('')\n\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHanlder = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    })\n    history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n  };\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHanlder}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n\n      <input className={classes.searchInput} placeholder=\"find your quote ?\" value={filterTerm} onChange={(e) => setFilterTerm(e.target.value)} style={{ padding: '15px 10px ', width: '100%', outline: 'none' }} />\n\n\n      <ul className={classes.list}>\n        {sortedQuotes.filter((quote) => {\n          if (!quote.text) {\n            return (\n              <QuoteItem\n                key={quote.id}\n                id={quote.id}\n                author={quote.author}\n                text={quote.text}\n              />\n            )\n          }\n          if (quote.text.toLowerCase().includes(filterTerm.toLowerCase())) {\n            return (\n              <QuoteItem\n                key={quote.id}\n                id={quote.id}\n                author={quote.author}\n                text={quote.text}\n              />\n            )\n          }\n        }\n\n        ).map((quote) => (\n            <QuoteItem\n              key={quote.id}\n              id={quote.id}\n              author={quote.author}\n              text={quote.text}\n            />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteItem.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/Card.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/LoadingSpinner.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NotFound.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/hooks/use-http.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/lib/api.js",["143"],"const FIREBASE_DOMAIN = 'https://quote-website-19a0e-default-rtdb.firebaseio.com';\nconst FIREBASE_APPID = '1:767475549942:web:db4f6dea2521e7ecfd0ed7'\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/NoQuotesFound.js",["144"],"import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        Add a Quote\n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentsList.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentItem.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/store/auth-context.js",["145"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/HomePage.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AuthPage.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/Auth/AuthForm.js",["146","147"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/ProfilePage.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/Profile/UserProfile.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/Profile/ProfileForm.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":29},{"ruleId":"152","severity":1,"message":"157","line":41,"column":7,"nodeType":"154","messageId":"155","endLine":41,"endColumn":10},{"ruleId":"158","severity":1,"message":"159","line":80,"column":31,"nodeType":"160","messageId":"161","endLine":80,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":80,"column":52,"nodeType":"160","messageId":"161","endLine":80,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":81,"column":31,"nodeType":"160","messageId":"161","endLine":81,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":81,"column":52,"nodeType":"160","messageId":"161","endLine":81,"endColumn":54},{"ruleId":"152","severity":1,"message":"162","line":17,"column":8,"nodeType":"154","messageId":"155","endLine":17,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":18,"column":8,"nodeType":"154","messageId":"155","endLine":18,"endColumn":18},{"ruleId":"152","severity":1,"message":"164","line":18,"column":21,"nodeType":"154","messageId":"155","endLine":18,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":35,"column":3,"nodeType":"167","endLine":35,"endColumn":16,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"169","line":43,"column":9,"nodeType":"154","messageId":"155","endLine":43,"endColumn":14},{"ruleId":"152","severity":1,"message":"170","line":11,"column":9,"nodeType":"154","messageId":"155","endLine":11,"endColumn":15},{"ruleId":"165","severity":1,"message":"171","line":23,"column":6,"nodeType":"167","endLine":23,"endColumn":21,"suggestions":"172"},{"ruleId":"152","severity":1,"message":"173","line":4,"column":22,"nodeType":"154","messageId":"155","endLine":4,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":29},{"ruleId":"152","severity":1,"message":"174","line":11,"column":51,"nodeType":"154","messageId":"155","endLine":11,"endColumn":55},{"ruleId":"152","severity":1,"message":"175","line":11,"column":58,"nodeType":"154","messageId":"155","endLine":11,"endColumn":65},{"ruleId":"176","severity":1,"message":"177","line":65,"column":64,"nodeType":"178","messageId":"179","endLine":65,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":48,"column":38,"nodeType":"182","messageId":"183","endLine":48,"endColumn":40},{"ruleId":"152","severity":1,"message":"184","line":2,"column":7,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":7,"column":7,"nodeType":"187","endLine":7,"endColumn":26},{"ruleId":"165","severity":1,"message":"188","line":98,"column":8,"nodeType":"167","endLine":98,"endColumn":34,"suggestions":"189"},{"ruleId":"152","severity":1,"message":"173","line":3,"column":22,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"190","line":13,"column":10,"nodeType":"154","messageId":"155","endLine":13,"endColumn":27},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'AuthContextProvider' is defined but never used.","'app' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'fetchdata' is assigned a value but never used.","'filterTerm' is assigned a value but never used.","'setFilterTerm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadedQuotes'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'quote' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onAddedComment'. Either include it or remove the dependency array.",["194"],"'Link' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FIREBASE_APPID' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["195"],"'isfederatedSignin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [loadedQuotes, sendRequest]",{"range":"202","text":"203"},"Update the dependencies array to be: [status, error, onAddedComment]",{"range":"204","text":"205"},"Update the dependencies array to be: [tokenData, logoutHandler, token]",{"range":"206","text":"207"},[999,1012],"[loadedQuotes, sendRequest]",[575,590],"[status, error, onAddedComment]",[2146,2172],"[tokenData, logoutHandler, token]"]