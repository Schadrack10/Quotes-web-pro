[{"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/index.js":"1","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/App.js":"2","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js":"3","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NewQuote.js":"4","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js":"5","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js":"6","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js":"7","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/Layout.jsx":"8","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/MainNavigation.jsx":"9","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js":"10","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteItem.js":"11","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js":"12","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/Card.js":"13","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/LoadingSpinner.js":"14","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js":"15","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NotFound.js":"16","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/hooks/use-http.js":"17","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/lib/api.js":"18","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/NoQuotesFound.js":"19","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentsList.js":"20","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentItem.js":"21"},{"size":317,"mtime":1666941531786,"results":"22","hashOfConfig":"23"},{"size":1223,"mtime":1666956661137,"results":"24","hashOfConfig":"23"},{"size":1385,"mtime":1668165032250,"results":"25","hashOfConfig":"23"},{"size":756,"mtime":1666959849762,"results":"26","hashOfConfig":"23"},{"size":1881,"mtime":1668169599024,"results":"27","hashOfConfig":"23"},{"size":1659,"mtime":1668174103704,"results":"28","hashOfConfig":"23"},{"size":1393,"mtime":1668173662847,"results":"29","hashOfConfig":"23"},{"size":338,"mtime":1666946841704,"results":"30","hashOfConfig":"23"},{"size":719,"mtime":1666947480352,"results":"31","hashOfConfig":"23"},{"size":1438,"mtime":1666955134681,"results":"32","hashOfConfig":"23"},{"size":456,"mtime":1666948922427,"results":"33","hashOfConfig":"23"},{"size":1733,"mtime":1666951927441,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1616596573000,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1616596573000,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616596573000,"results":"37","hashOfConfig":"23"},{"size":250,"mtime":1666950013840,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1616590605000,"results":"39","hashOfConfig":"23"},{"size":2228,"mtime":1666958999607,"results":"40","hashOfConfig":"23"},{"size":268,"mtime":1616596573000,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616596573000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616596573000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hdanc9",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/index.js",[],["90","91"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/App.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/AllQuotes.js",["92","93"],"import React, {useEffect} from 'react'\nimport QuoteList from '../components/quotes/QuoteList'\nimport useHttp from '../hooks/use-http'\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport { getAllQuotes } from '../components/lib/api'\n\nconst DUMMMY_QUOTES = [\n  {id:'q1' , author:'schad Botombe', text:'Learning react is fun!!' },\n  {id:'q2' , author:'fred legusta', text:'Learning react is fun!!' },\n  {id:'q3' , author:'tom hendricks', text:'Learning react is fun!!' },\n]\n\n\nconst AllQuotes = () => {\n\nconst [fetchdata , setFetchData] =  React.useState(DUMMMY_QUOTES)\n\n  let {sendRequest, status, data:loadedQuotes , error} = useHttp(getAllQuotes)\n\n// console.log(loadedQuotes, 'getting the quotes ')\n\nif(loadedQuotes == null){\n  loadedQuotes = DUMMMY_QUOTES\n}\n\n\nuseEffect(()=>{\n  sendRequest()\n  if(loadedQuotes == null){\n\n    setFetchData(loadedQuotes)\n  }\n},[sendRequest])\n\n\n\n\nif(status === 'pending'){\n  return (\n    <div className='centered focused'>\n      <LoadingSpinner/>\n    </div>\n  )\n}\nif(error){\n   return (\n    <p>unable to fetch because{error}</p>\n   )\n}\nif(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n  return <NoQuotesFound/>\n}\n\n  return (\n\n       <QuoteList quotes={loadedQuotes}/>\n      //  <QuoteList quotes={DUMMMY_QUOTES}/>\n  \n  )\n}\n\nexport default AllQuotes","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NewQuote.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js",["94"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js",["95","96"],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/Layout.jsx",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/layout/MainNavigation.jsx",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteItem.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/Card.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/UI/LoadingSpinner.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/HighlightedQuote.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/NotFound.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/hooks/use-http.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/lib/api.js",["97"],"const FIREBASE_DOMAIN = 'https://quote-website-19a0e-default-rtdb.firebaseio.com';\nconst FIREBASE_APPID = '1:767475549942:web:db4f6dea2521e7ecfd0ed7'\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/quotes/NoQuotesFound.js",["98"],"import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        Add a Quote\n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentsList.js",[],"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/CommentItem.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":17,"column":8,"nodeType":"105","messageId":"106","endLine":17,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":34,"column":3,"nodeType":"109","endLine":34,"endColumn":16,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":43,"column":9,"nodeType":"105","messageId":"106","endLine":43,"endColumn":14},{"ruleId":"103","severity":1,"message":"112","line":11,"column":9,"nodeType":"105","messageId":"106","endLine":11,"endColumn":15},{"ruleId":"107","severity":1,"message":"113","line":23,"column":6,"nodeType":"109","endLine":23,"endColumn":21,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"115","line":2,"column":7,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":7,"column":7,"nodeType":"118","endLine":7,"endColumn":26},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'fetchdata' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadedQuotes'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'quote' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onAddedComment'. Either include it or remove the dependency array.",["122"],"'FIREBASE_APPID' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [loadedQuotes, sendRequest]",{"range":"127","text":"128"},"Update the dependencies array to be: [status, error, onAddedComment]",{"range":"129","text":"130"},[938,951],"[loadedQuotes, sendRequest]",[575,590],"[status, error, onAddedComment]"]