{"ast":null,"code":"var _jsxFileName = \"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { useParams, Route, Link } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteDetails = () => {\n  _s();\n  const params = useParams();\n  const DUMMMY_QUOTES = [{\n    id: 'q1',\n    author: 'schad Botombe',\n    text: 'Learning react is fun!!'\n  }, {\n    id: 'q2',\n    author: 'fred legusta',\n    text: 'Learning react is fun!!'\n  }, {\n    id: 'q3',\n    author: 'tom hendricks',\n    text: 'Learning react is fun!!'\n  }];\n  const quote = DUMMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" No Quotes found here!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"Load comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetails, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetails;\nexport default QuoteDetails;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"names":["React","Fragment","useParams","Route","Link","Comments","HighlightedQuote","QuoteDetails","params","DUMMMY_QUOTES","id","author","text","quote","find","quoteId"],"sources":["/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"sourcesContent":["import React from 'react'\nimport { Fragment } from 'react'\nimport { useParams, Route, Link } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\n\nconst QuoteDetails = () => {\n\n  const params = useParams()\n\n  const DUMMMY_QUOTES = [\n    {id:'q1' , author:'schad Botombe', text:'Learning react is fun!!' },\n    {id:'q2' , author:'fred legusta', text:'Learning react is fun!!' },\n    {id:'q3' , author:'tom hendricks', text:'Learning react is fun!!' },\n  ]\n  \nconst quote  = DUMMMY_QUOTES.find(quote => quote.id === params.quoteId)\n\n\nif(!quote){\n  return <h3> No Quotes found here!!</h3>\n}\n\n  \n\n  return (\n    <Fragment>\n\n       <HighlightedQuote text={quote.text} author={quote.author}/>\n        <div className='center'>\n            <Link to=\"Load comments\">\n\n            </Link>\n        </div>\n\n      <Route path={`/quotes/${params.quoteId}/comments`}>\n        <Comments/>\n      </Route>\n\n    </Fragment>\n  )\n}\n\nexport default QuoteDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACzD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAA;AAEpE,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEzB,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAE1B,MAAMO,aAAa,GAAG,CACpB;IAACC,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,eAAe;IAAEC,IAAI,EAAC;EAA0B,CAAC,EACnE;IAACF,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,cAAc;IAAEC,IAAI,EAAC;EAA0B,CAAC,EAClE;IAACF,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,eAAe;IAAEC,IAAI,EAAC;EAA0B,CAAC,CACpE;EAEH,MAAMC,KAAK,GAAIJ,aAAa,CAACK,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKF,MAAM,CAACO,OAAO,CAAC;EAGvE,IAAG,CAACF,KAAK,EAAC;IACR,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC;EACzC;EAIE,oBACE,QAAC,QAAQ;IAAA,wBAEN,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACD,IAAK;MAAC,MAAM,EAAEC,KAAK,CAACF;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1D;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACnB,QAAC,IAAI;QAAC,EAAE,EAAC;MAAe;QAAA;QAAA;QAAA;MAAA;IAEjB;MAAA;MAAA;MAAA;IAAA,QACL,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,WAAUH,MAAM,CAACO,OAAQ,WAAW;MAAA,uBAChD,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEf,CAAC;AAAA,GAnCKR,YAAY;EAAA,QAEDL,SAAS;AAAA;AAAA,KAFpBK,YAAY;AAqClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}