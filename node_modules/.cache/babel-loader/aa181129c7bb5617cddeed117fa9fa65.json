{"ast":null,"code":"var _jsxFileName = \"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from './../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedcomments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {};\n  let jsxComment;\n  if (status === 'pending') {\n    jsxComment = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  if (status === 'completed' && loadedcomments) {\n    jsxComment = /*#__PURE__*/_jsxDEV(CommentsList, {\n      components: loadedcomments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params,\n      onAddedComent: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"ZIlclXG+sO1Or3r23m5ytwVg/no=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useEffect","useState","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedcomments","startAddCommentHandler","addedCommentHandler","jsxComment","comments"],"sources":["/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from './../lib/api'\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\n\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams()\n\n  const { quoteId } = params\n\n  const { sendRequest, status, data: loadedcomments } = useHttp(getAllComments)\n\n  useEffect(() => {\n\n    sendRequest(quoteId)\n\n  }, [quoteId, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler = () => {\n\n  }\n\n  let jsxComment;\n\n  if (status === 'pending') {\n    jsxComment = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if(status === 'completed' && loadedcomments){\n        jsxComment = <CommentsList components={loadedcomments}/>\n  }\n\n\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params} onAddedComent={addedCommentHandler} />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAA;AAIzC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,MAAM,GAAGV,SAAS,EAAE;EAE1B,MAAM;IAAEW;EAAQ,CAAC,GAAGD,MAAM;EAE1B,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGZ,OAAO,CAACC,cAAc,CAAC;EAE7EN,SAAS,CAAC,MAAM;IAEdc,WAAW,CAACD,OAAO,CAAC;EAEtB,CAAC,EAAE,CAACA,OAAO,EAAEC,WAAW,CAAC,CAAC;EAE1B,MAAMI,sBAAsB,GAAG,MAAM;IACnCP,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EACD,MAAMQ,mBAAmB,GAAG,MAAM,CAElC,CAAC;EAED,IAAIC,UAAU;EAEd,IAAIL,MAAM,KAAK,SAAS,EAAE;IACxBK,UAAU,gBACR;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB;EACH;EAEA,IAAGL,MAAM,KAAK,WAAW,IAAIE,cAAc,EAAC;IACtCG,UAAU,gBAAG,QAAC,YAAY;MAAC,UAAU,EAAEH;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE;EAC9D;EAIA,oBACE;IAAS,SAAS,EAAEd,OAAO,CAACkB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACX,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEQ,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAR,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEE,MAAO;MAAC,aAAa,EAAEO;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3F;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEd,CAAC;AAAC,GAjDIV,QAAQ;EAAA,QAEGP,SAAS,EAI8BG,OAAO;AAAA;AAAA,KANzDI,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}