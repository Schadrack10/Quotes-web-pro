{"ast":null,"code":"var _jsxFileName = \"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport HighlightQuote from \"../quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotes = [{\n  id: \"q1\",\n  author: \"Brandon\",\n  text: \"Learning React for beginners\"\n}, {\n  id: \"q2\",\n  author: \"Peter\",\n  text: \"Learning Advanced React\"\n}];\nconst QuoteDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  console.log(match);\n  const params = useParams();\n  const quotesData = quotes.find(quote => quote.id === params.quoteId);\n  if (!quotesData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightQuote, {\n      text: quotesData.text,\n      author: quotesData.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Fragment","Link","Route","useParams","useRouteMatch","Comments","HighlightQuote","quotes","id","author","text","QuoteDetail","match","console","log","params","quotesData","find","quote","quoteId","path","url"],"sources":["/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../comments/Comments\";\nimport HighlightQuote from \"../quotes/HighlightedQuote\";\n\nconst quotes = [\n  { id: \"q1\", author: \"Brandon\", text: \"Learning React for beginners\" },\n  { id: \"q2\", author: \"Peter\", text: \"Learning Advanced React\" },\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  console.log(match);\n\n  const params = useParams();\n  const quotesData = quotes.find((quote) => quote.id === params.quoteId);\n\n  if (!quotesData) {\n    return <p>No Quote found!!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightQuote text={quotesData.text} author={quotesData.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,cAAc,MAAM,4BAA4B;AAAC;AAExD,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,SAAS;EAAEC,IAAI,EAAE;AAA+B,CAAC,EACrE;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,OAAO;EAAEC,IAAI,EAAE;AAA0B,CAAC,CAC/D;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,KAAK,GAAGR,aAAa,EAAE;EAC7BS,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,MAAMG,MAAM,GAAGZ,SAAS,EAAE;EAC1B,MAAMa,UAAU,GAAGT,MAAM,CAACU,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACV,EAAE,KAAKO,MAAM,CAACI,OAAO,CAAC;EAEtE,IAAI,CAACH,UAAU,EAAE;IACf,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EAChC;EAEA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,cAAc;MAAC,IAAI,EAAEA,UAAU,CAACN,IAAK;MAAC,MAAM,EAAEM,UAAU,CAACP;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE,QAAC,KAAK;MAAC,IAAI,EAAEG,KAAK,CAACQ,IAAK;MAAC,KAAK;MAAA,uBAC5B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAER,KAAK,CAACS,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEjD;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eACR,QAAC,KAAK;MAAC,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,WAAW;MAAA,uBACpC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GA1BIT,WAAW;EAAA,QACDP,aAAa,EAGZD,SAAS;AAAA;AAAA,KAJpBQ,WAAW;AA4BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}