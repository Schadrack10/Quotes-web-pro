{"ast":null,"code":"var _jsxFileName = \"/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Fragment } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../components/lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteDetails = () => {\n  _s();\n  const params = useParams();\n  const match = useRouteMatch();\n  console.log(params);\n  const DUMMMY_QUOTES = [{\n    id: 'q1',\n    author: 'schad Botombe',\n    text: 'Learning react is fun!!'\n  }, {\n    id: 'q2',\n    author: 'fred legusta',\n    text: 'Learning react is fun!!'\n  }, {\n    id: 'q3',\n    author: 'tom hendricks',\n    text: 'Learning react is fun!!'\n  }];\n  const quote = DUMMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" No Quotes found here!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'centered',\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetails, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n_c = QuoteDetails;\nexport default QuoteDetails;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"names":["React","Fragment","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","QuoteDetails","params","match","console","log","DUMMMY_QUOTES","id","author","text","quote","find","quoteId","path","url"],"sources":["/home/thecoderlorian/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"sourcesContent":["import React from 'react'\nimport { Fragment } from 'react'\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom'\nimport Comments from '../components/comments/Comments'\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\nimport useHttp from '../hooks/use-http'\nimport { getSingleQuote } from '../components/lib/api'\n\nconst QuoteDetails = () => {\n\n  const params = useParams()\n  const match = useRouteMatch()\n\n\n  console.log(params)\n\n  const DUMMMY_QUOTES = [\n    {id:'q1' , author:'schad Botombe', text:'Learning react is fun!!' },\n    {id:'q2' , author:'fred legusta', text:'Learning react is fun!!' },\n    {id:'q3' , author:'tom hendricks', text:'Learning react is fun!!' },\n  ]\n  \nconst quote  = DUMMMY_QUOTES.find(quote => quote.id === params.quoteId)\n\n\nif(!quote){\n  return <h3> No Quotes found here!!</h3>\n}\n\n  \n\n  return (\n    <Fragment>\n\n       <HighlightedQuote text={quote.text} author={quote.author}/>\n\n       <Route path={match.path} exact>\n        <div className={'centered'}>\n        <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n                  Load comments\n            </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments/>\n      </Route>\n\n    </Fragment>\n  )\n}\n\nexport default QuoteDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACxE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AACpE,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AAAA;AAEtD,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEzB,MAAMC,MAAM,GAAGT,SAAS,EAAE;EAC1B,MAAMU,KAAK,GAAGP,aAAa,EAAE;EAG7BQ,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAEnB,MAAMI,aAAa,GAAG,CACpB;IAACC,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,eAAe;IAAEC,IAAI,EAAC;EAA0B,CAAC,EACnE;IAACF,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,cAAc;IAAEC,IAAI,EAAC;EAA0B,CAAC,EAClE;IAACF,EAAE,EAAC,IAAI;IAAGC,MAAM,EAAC,eAAe;IAAEC,IAAI,EAAC;EAA0B,CAAC,CACpE;EAEH,MAAMC,KAAK,GAAIJ,aAAa,CAACK,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKL,MAAM,CAACU,OAAO,CAAC;EAGvE,IAAG,CAACF,KAAK,EAAC;IACR,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC;EACzC;EAIE,oBACE,QAAC,QAAQ;IAAA,wBAEN,QAAC,gBAAgB;MAAC,IAAI,EAAEA,KAAK,CAACD,IAAK;MAAC,MAAM,EAAEC,KAAK,CAACF;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eAE3D,QAAC,KAAK;MAAC,IAAI,EAAEL,KAAK,CAACU,IAAK;MAAC,KAAK;MAAA,uBAC7B;QAAK,SAAS,EAAE,UAAW;QAAA,uBAC3B,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAE7C;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QACA,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAAW;MAAA,uBACpC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEf,CAAC;AAAA,GA1CKZ,YAAY;EAAA,QAEDR,SAAS,EACVG,aAAa;AAAA;AAAA,KAHvBK,YAAY;AA4ClB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}